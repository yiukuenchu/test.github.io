import { strict } from "assert";

export declare interface SiteConfig {
  /**
   * Used for publicPath and routeBase.
   */
  base: string;
  /**
   * Site's title.
   */
  title: string;
  /**
   * Site's description.
   */
  description: string;
  /**
   * Extra tags to be injected to the page HTML <head>
   */
  head: Array<Head>;
  /**
   * Specify the host to use for the dev server.
   */
  host?: string;
  /**
   * Specify the port to use for the dev server.
   */
  port?: number;
  /**
   * Specify the temporary directory for client.
   */
  temp?: string;
  /**
   * Specify the output directory for vuepress build.
   * If a relative path is specified, it will be resolved based on process.cwd().
   */
  dest?: string;
  ga?: boolean;
  locales?: Record<string, Locale>;
  shouldPrefetch?: () => boolean;
  /**
   * This option can be used to specify the path to the cache, and can also remove the cache before each build by setting it to false.
   */
  cache?: boolean | string;
  theme?: string;
  themeConfig?: ThemeConfig;
  plugins?: Array<Plugin>;
  markdown?: MarkdownConfig;
  postcss?: Record<string, any>;
  stylus?: Record<string, any>;
  scss?: Record<string, any>;
  sass?: Record<string, any>;
  less?: Record<string, any>;
  configureWebpack?:
    Record<string, any> |
    ((config: any, isServer: boolean) => Record<string, any>);
  // TODO
  chainWebpack?: any;
  evergreen?: boolean;
}

interface MarkdownConfig {
  lineNumbers?: boolean;

  slugify? (str: string): string;

  // TODO
  anchor?: any;
  externalLinks?: Record<string, string>;
  // TODO
  toc?: any;
  plugins: Array<Plugin>;

  extendMarkdown? (md: any): void;
}

interface ThemeConfig {
  
}

interface Locale {
  lang: string;
  title: string;
  description: string;
}

type Plugin = [string, any]

type Head = [string, Record<string, string>, string?]



