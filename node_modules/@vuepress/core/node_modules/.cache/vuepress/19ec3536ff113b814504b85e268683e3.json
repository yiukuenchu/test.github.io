{"remainingRequest":"/Users/zhuyaokun/vuepress-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/TheHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/TheHeader.vue","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _Array$isArray from \"/Users/zhuyaokun/vuepress-blog/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TransitionFadeSlide from './TransitionFadeSlide.vue';\nimport TheHeaderNavbar from './TheHeaderNavbar.vue';\nimport TheHeaderBanner from './TheHeaderBanner.vue';\nimport GeoPattern from 'geopattern';\nvar generators = ['octogons', 'overlappingCircles', 'plusSigns', 'xes', // 'sineWaves',\n'hexagons', 'overlappingRings', // 'plaid',\n'triangles', // 'squares',\n'concentricCircles', 'diamonds', 'tessellation', // 'nestedSquares',\n'mosaicSquares', 'chevrons'];\nexport default {\n  name: 'TheHeader',\n  components: {\n    TransitionFadeSlide: TransitionFadeSlide,\n    TheHeaderNavbar: TheHeaderNavbar,\n    TheHeaderBanner: TheHeaderBanner\n  },\n  computed: {\n    showTitle: function showTitle() {\n      return this.$frontmatter['header-title'] !== false && this.$themeConfig.header['showTitle'] !== false;\n    },\n    backgroundConfig: function backgroundConfig() {\n      return this.$themeConfig.header.background || {};\n    },\n    backgroundImg: function backgroundImg() {\n      // frontmatter > themeConfig\n      return this.$frontmatter['header-image'] || this.backgroundConfig['url'] || null;\n    },\n    style: function style() {\n      // use image\n      if (this.backgroundImg) {\n        var url = this.backgroundImg; // randomly select an image if an array is provided\n\n        if (_Array$isArray(url)) {\n          url = this.randomArr(url);\n        }\n\n        return {\n          'background-size': 'cover',\n          'background-repeat': 'no-repeat',\n          'background-position': 'center',\n          'background-attachment': 'scroll',\n          'background-image': \"url(\".concat(url, \")\")\n        };\n      } // use geopattern\n      // avoid prerendering the geopattern in build stage or the html files will be 14KB larger\n\n\n      if (!this.$ssrContext) {\n        return {\n          'background-image': this.gpImg()\n        };\n      }\n\n      return {};\n    }\n  },\n  methods: {\n    // in computed, geopattern will always be computed\n    // in methods, geopattern won't be called with useGeo = false\n    gpImg: function gpImg() {\n      return this.backgroundConfig.useGeo !== false ? GeoPattern.generate(this.gpString(), {\n        // color: '#9fe0f6',\n        generator: this.randomArr(generators)\n      }).toDataUrl() : null;\n    },\n    gpString: function gpString() {\n      return (this.$page && this.$page.title || '') + new Date().toString();\n    },\n    randomArr: function randomArr(arr) {\n      return arr[Math.floor(Math.random() * arr.length)];\n    }\n  }\n};",{"version":3,"sources":["/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/TheHeader.vue"],"names":["TransitionFadeSlide","TheHeaderNavbar","TheHeaderBanner","GeoPattern","generators","name","components","computed","showTitle","$frontmatter","$themeConfig","header","backgroundConfig","background","backgroundImg","style","url","randomArr","$ssrContext","gpImg","methods","useGeo","generate","gpString","generator","toDataUrl","$page","title","Date","toString","arr","Math","floor","random","length"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,eAAP,MAA4B,uBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,IAAMC,UAAU,GAAG,CACjB,UADiB,EAEjB,oBAFiB,EAGjB,WAHiB,EAIjB,KAJiB,EAKjB;AACA,UANiB,EAOjB,kBAPiB,EAQjB;AACA,WATiB,EAUjB;AACA,mBAXiB,EAYjB,UAZiB,EAajB,cAbiB,EAcjB;AACA,eAfiB,EAgBjB,UAhBiB,CAAnB;AAmBA,eAAe;AACbC,EAAAA,IAAI,EAAE,WADO;AAGbC,EAAAA,UAAU,EAAE;AACVN,IAAAA,mBAAmB,EAAnBA,mBADU;AAEVC,IAAAA,eAAe,EAAfA,eAFU;AAGVC,IAAAA,eAAe,EAAfA;AAHU,GAHC;AASbK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SADQ,uBACK;AACX,aAAO,KAAKC,YAAL,CAAkB,cAAlB,MAAsC,KAAtC,IAA+C,KAAKC,YAAL,CAAkBC,MAAlB,CAAyB,WAAzB,MAA0C,KAAhG;AACD,KAHO;AAKRC,IAAAA,gBALQ,8BAKY;AAClB,aAAO,KAAKF,YAAL,CAAkBC,MAAlB,CAAyBE,UAAzB,IAAuC,EAA9C;AACD,KAPO;AASRC,IAAAA,aATQ,2BASS;AACf;AACA,aAAO,KAAKL,YAAL,CAAkB,cAAlB,KAAqC,KAAKG,gBAAL,CAAsB,KAAtB,CAArC,IAAqE,IAA5E;AACD,KAZO;AAcRG,IAAAA,KAdQ,mBAcC;AACP;AACA,UAAI,KAAKD,aAAT,EAAwB;AACtB,YAAIE,GAAG,GAAG,KAAKF,aAAf,CADsB,CAGtB;;AACA,YAAI,eAAcE,GAAd,CAAJ,EAAwB;AACtBA,UAAAA,GAAG,GAAG,KAAKC,SAAL,CAAeD,GAAf,CAAN;AACD;;AAED,eAAO;AACL,6BAAmB,OADd;AAEL,+BAAqB,WAFhB;AAGL,iCAAuB,QAHlB;AAIL,mCAAyB,QAJpB;AAKL,4CAA2BA,GAA3B;AALK,SAAP;AAOD,OAjBM,CAmBP;AACA;;;AACA,UAAI,CAAC,KAAKE,WAAV,EAAuB;AACrB,eAAO;AACL,8BAAoB,KAAKC,KAAL;AADf,SAAP;AAGD;;AAED,aAAO,EAAP;AACD;AA1CO,GATG;AAsDbC,EAAAA,OAAO,EAAE;AACP;AACA;AACAD,IAAAA,KAHO,mBAGE;AACP,aAAO,KAAKP,gBAAL,CAAsBS,MAAtB,KAAiC,KAAjC,GACHlB,UAAU,CAACmB,QAAX,CAAoB,KAAKC,QAAL,EAApB,EAAqC;AACrC;AACAC,QAAAA,SAAS,EAAE,KAAKP,SAAL,CAAeb,UAAf;AAF0B,OAArC,EAGCqB,SAHD,EADG,GAKH,IALJ;AAMD,KAVM;AAYPF,IAAAA,QAZO,sBAYK;AACV,aAAO,CAAE,KAAKG,KAAL,IAAc,KAAKA,KAAL,CAAWC,KAA1B,IAAoC,EAArC,IAA4C,IAAIC,IAAJ,EAAD,CAAaC,QAAb,EAAlD;AACD,KAdM;AAgBPZ,IAAAA,SAhBO,qBAgBIa,GAhBJ,EAgBS;AACd,aAAOA,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAAG,CAACI,MAA/B,CAAD,CAAV;AACD;AAlBM;AAtDI,CAAf","sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TransitionFadeSlide from './TransitionFadeSlide.vue'\nimport TheHeaderNavbar from './TheHeaderNavbar.vue'\nimport TheHeaderBanner from './TheHeaderBanner.vue'\nimport GeoPattern from 'geopattern'\n\nconst generators = [\n  'octogons',\n  'overlappingCircles',\n  'plusSigns',\n  'xes',\n  // 'sineWaves',\n  'hexagons',\n  'overlappingRings',\n  // 'plaid',\n  'triangles',\n  // 'squares',\n  'concentricCircles',\n  'diamonds',\n  'tessellation',\n  // 'nestedSquares',\n  'mosaicSquares',\n  'chevrons',\n]\n\nexport default {\n  name: 'TheHeader',\n\n  components: {\n    TransitionFadeSlide,\n    TheHeaderNavbar,\n    TheHeaderBanner,\n  },\n\n  computed: {\n    showTitle () {\n      return this.$frontmatter['header-title'] !== false && this.$themeConfig.header['showTitle'] !== false\n    },\n\n    backgroundConfig () {\n      return this.$themeConfig.header.background || {}\n    },\n\n    backgroundImg () {\n      // frontmatter > themeConfig\n      return this.$frontmatter['header-image'] || this.backgroundConfig['url'] || null\n    },\n\n    style () {\n      // use image\n      if (this.backgroundImg) {\n        let url = this.backgroundImg\n\n        // randomly select an image if an array is provided\n        if (Array.isArray(url)) {\n          url = this.randomArr(url)\n        }\n\n        return {\n          'background-size': 'cover',\n          'background-repeat': 'no-repeat',\n          'background-position': 'center',\n          'background-attachment': 'scroll',\n          'background-image': `url(${url})`,\n        }\n      }\n\n      // use geopattern\n      // avoid prerendering the geopattern in build stage or the html files will be 14KB larger\n      if (!this.$ssrContext) {\n        return {\n          'background-image': this.gpImg(),\n        }\n      }\n\n      return {}\n    },\n  },\n\n  methods: {\n    // in computed, geopattern will always be computed\n    // in methods, geopattern won't be called with useGeo = false\n    gpImg () {\n      return this.backgroundConfig.useGeo !== false\n        ? GeoPattern.generate(this.gpString(), {\n          // color: '#9fe0f6',\n          generator: this.randomArr(generators),\n        }).toDataUrl()\n        : null\n    },\n\n    gpString () {\n      return ((this.$page && this.$page.title) || '') + (new Date()).toString()\n    },\n\n    randomArr (arr) {\n      return arr[Math.floor(Math.random() * arr.length)]\n    },\n  },\n}\n"]}]}