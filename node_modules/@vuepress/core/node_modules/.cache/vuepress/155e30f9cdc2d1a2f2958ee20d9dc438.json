{"remainingRequest":"/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostNavCard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostNavCard.vue","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport throttle from 'lodash.throttle'\nimport debounce from 'lodash.debounce'\nimport Icon from './Icon.vue'\n\nexport default {\n  name: 'PostNavCard',\n\n  components: {\n    Icon,\n  },\n\n  data () {\n    return {\n      fixed: false,\n      width: 0,\n      scrollListener: throttle(() => {\n        this.fixed = this.infoCardDom.getBoundingClientRect().bottom < this.navbarHeight\n      }, 100),\n      resizeListener: debounce(() => {\n        this.width = this.getWidth()\n      }, 100),\n    }\n  },\n\n  computed: {\n    style () {\n      return {\n        'position': this.fixed ? 'fixed' : 'relative',\n        'top': this.fixed ? `${this.navbarHeight}px` : 0,\n        'width': `${this.width}px`,\n      }\n    },\n\n    infoCardDom () {\n      return document.querySelector('#app .info-card')\n    },\n\n    navbarHeight () {\n      return document.querySelector('.navbar').clientHeight\n    },\n\n    showContents () {\n      return this.$page.headers && this.$page.headers.filter(h => h.level === 2).length > 0\n    },\n\n    showComments () {\n      return this.$themeConfig.comments !== false && this.$frontmatter['vssue'] !== false && (\n        this.$frontmatter['vssue-id'] || this.$frontmatter['vssue-title'] || this.$frontmatter['title']\n      )\n    },\n  },\n\n  mounted () {\n    this.width = this.getWidth()\n\n    window.addEventListener('scroll', this.scrollListener)\n    window.addEventListener('resize', this.resizeListener)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.scrollListener)\n    window.removeEventListener('resize', this.resizeListener)\n  },\n\n  methods: {\n    getWidth () {\n      return this.infoCardDom.clientWidth\n    },\n  },\n}\n",{"version":3,"sources":["PostNavCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"PostNavCard.vue","sourceRoot":"node_modules/vuepress-theme-meteorlxy/lib/components","sourcesContent":["<template>\n  <div\n    v-if=\"showContents || showComments\"\n    class=\"post-nav-card\"\n    :style=\"style\"\n  >\n    <div\n      v-if=\"showContents\"\n      class=\"post-nav-contents\"\n    >\n      <Icon name=\"book\" />\n\n      <span>{{ $themeConfig.lang.toc }}</span>\n\n      <TOC class=\"post-nav-toc\" />\n    </div>\n\n    <div\n      v-if=\"showComments\"\n      class=\"post-nav-comments\"\n    >\n      <Icon name=\"comment\" />\n\n      <RouterLink to=\"#post-comments\">\n        {{ $themeConfig.lang.comments }}\n      </RouterLink>\n    </div>\n  </div>\n</template>\n\n<script>\nimport throttle from 'lodash.throttle'\nimport debounce from 'lodash.debounce'\nimport Icon from './Icon.vue'\n\nexport default {\n  name: 'PostNavCard',\n\n  components: {\n    Icon,\n  },\n\n  data () {\n    return {\n      fixed: false,\n      width: 0,\n      scrollListener: throttle(() => {\n        this.fixed = this.infoCardDom.getBoundingClientRect().bottom < this.navbarHeight\n      }, 100),\n      resizeListener: debounce(() => {\n        this.width = this.getWidth()\n      }, 100),\n    }\n  },\n\n  computed: {\n    style () {\n      return {\n        'position': this.fixed ? 'fixed' : 'relative',\n        'top': this.fixed ? `${this.navbarHeight}px` : 0,\n        'width': `${this.width}px`,\n      }\n    },\n\n    infoCardDom () {\n      return document.querySelector('#app .info-card')\n    },\n\n    navbarHeight () {\n      return document.querySelector('.navbar').clientHeight\n    },\n\n    showContents () {\n      return this.$page.headers && this.$page.headers.filter(h => h.level === 2).length > 0\n    },\n\n    showComments () {\n      return this.$themeConfig.comments !== false && this.$frontmatter['vssue'] !== false && (\n        this.$frontmatter['vssue-id'] || this.$frontmatter['vssue-title'] || this.$frontmatter['title']\n      )\n    },\n  },\n\n  mounted () {\n    this.width = this.getWidth()\n\n    window.addEventListener('scroll', this.scrollListener)\n    window.addEventListener('resize', this.resizeListener)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('scroll', this.scrollListener)\n    window.removeEventListener('resize', this.resizeListener)\n  },\n\n  methods: {\n    getWidth () {\n      return this.infoCardDom.clientWidth\n    },\n  },\n}\n</script>\n\n<style lang=\"stylus\">\n@require '~@theme/styles/variables'\n\n.post-nav-card\n  padding 1rem\n  color $grayTextColor\n  word-break break-all\n  line-height 160%\n  .icon\n    fill $grayTextColor\n  .post-nav-toc > ul\n      word-break normal\n      margin 0.5rem 0\n      padding-left 2rem\n      ul\n        padding-left 0.8rem\n  .post-nav-comments a\n    color $grayTextColor\n    &:hover\n      text-decoration underline\n</style>\n"]}]}