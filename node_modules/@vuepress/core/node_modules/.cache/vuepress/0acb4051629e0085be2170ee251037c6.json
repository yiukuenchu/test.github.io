{"remainingRequest":"/Users/zhuyaokun/vuepress-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/TheHeader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/TheHeader.vue","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport _Array$isArray from \"/Users/zhuyaokun/vuepress-blog/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TransitionFadeSlide from './TransitionFadeSlide.vue';\nimport TheHeaderNavbar from './TheHeaderNavbar.vue';\nimport TheHeaderBanner from './TheHeaderBanner.vue';\nimport GeoPattern from 'geopattern';\nvar generators = ['octogons', 'overlappingCircles', 'plusSigns', 'xes', // 'sineWaves',\n'hexagons', 'overlappingRings', // 'plaid',\n'triangles', // 'squares',\n'concentricCircles', 'diamonds', 'tessellation', // 'nestedSquares',\n'mosaicSquares', 'chevrons'];\nexport default {\n  name: 'TheHeader',\n  components: {\n    TransitionFadeSlide: TransitionFadeSlide,\n    TheHeaderNavbar: TheHeaderNavbar,\n    TheHeaderBanner: TheHeaderBanner\n  },\n  computed: {\n    showTitle: function showTitle() {\n      return this.$frontmatter['header-title'] !== false && this.$themeConfig.header['showTitle'] !== false;\n    },\n    backgroundConfig: function backgroundConfig() {\n      return this.$themeConfig.header.background || {};\n    },\n    backgroundImg: function backgroundImg() {\n      // frontmatter > themeConfig\n      return this.$frontmatter['header-image'] || this.backgroundConfig['url'] || null;\n    },\n    style: function style() {\n      // use image\n      if (this.backgroundImg) {\n        var url = this.backgroundImg; // randomly select an image if an array is provided\n\n        if (_Array$isArray(url)) {\n          url = this.randomArr(url);\n        }\n\n        return {\n          'background-size': 'cover',\n          'background-repeat': 'no-repeat',\n          'background-position': 'center',\n          'background-attachment': 'scroll',\n          'background-image': \"url(\".concat(url, \")\")\n        };\n      } // use geopattern\n      // avoid prerendering the geopattern in build stage or the html files will be 14KB larger\n\n\n      if (!this.$ssrContext) {\n        return {\n          'background-image': this.gpImg()\n        };\n      }\n\n      return {};\n    }\n  },\n  methods: {\n    // in computed, geopattern will always be computed\n    // in methods, geopattern won't be called with useGeo = false\n    gpImg: function gpImg() {\n      return this.backgroundConfig.useGeo !== false ? GeoPattern.generate(this.gpString(), {\n        // color: '#9fe0f6',\n        generator: this.randomArr(generators)\n      }).toDataUrl() : null;\n    },\n    gpString: function gpString() {\n      return (this.$page && this.$page.title || '') + new Date().toString();\n    },\n    randomArr: function randomArr(arr) {\n      return arr[Math.floor(Math.random() * arr.length)];\n    }\n  }\n};",null]}