{"remainingRequest":"/Users/zhuyaokun/vuepress-blog/node_modules/babel-loader/lib/index.js??ref--3-1!/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostsFilter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vuepress-theme-meteorlxy/lib/components/PostsFilter.vue","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/zhuyaokun/vuepress-blog/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport _Array$isArray from \"/Users/zhuyaokun/vuepress-blog/node_modules/@babel/runtime-corejs2/core-js/array/is-array\";\nimport \"core-js/modules/es6.string.trim\";\nimport \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport _getIterator from \"/Users/zhuyaokun/vuepress-blog/node_modules/@babel/runtime-corejs2/core-js/get-iterator\";\nimport \"core-js/modules/es6.array.filter\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport PostsFilterCategories from '../components/PostsFilterCategories.vue';\nimport PostsFilterTags from '../components/PostsFilterTags.vue';\nimport PostsFilterSearch from '../components/PostsFilterSearch.vue';\nexport default {\n  name: 'PostsFilter',\n  components: {\n    PostsFilterCategories: PostsFilterCategories,\n    PostsFilterTags: PostsFilterTags,\n    PostsFilterSearch: PostsFilterSearch\n  },\n  props: {\n    posts: {\n      type: Array,\n      required: false,\n      default: null\n    },\n    categories: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    tags: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    search: {\n      type: Boolean,\n      required: false,\n      default: true\n    },\n    value: {\n      type: Array,\n      required: false,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      filterTags: [],\n      filterCategory: null,\n      filterSearch: ''\n    };\n  },\n  computed: {\n    filteredPosts: function filteredPosts() {\n      var _this = this;\n\n      var filteredPosts = this.posts || this.$posts;\n\n      if (this.categories && this.filterCategory) {\n        filteredPosts = filteredPosts.filter(function (p) {\n          return p.category === _this.filterCategory;\n        });\n      }\n\n      if (this.tags && this.filterTags.length !== 0) {\n        filteredPosts = filteredPosts.filter(function (p) {\n          var postTags = p.tags;\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = _getIterator(_this.filterTags), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var tag = _step.value;\n\n              if (postTags.includes(tag)) {\n                return true;\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return != null) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          return false;\n        });\n      }\n\n      if (this.search && this.filterSearch !== '') {\n        var searchString = this.filterSearch.toLowerCase().trim();\n\n        var match = function match(item) {\n          if (typeof item === 'string') {\n            return item.toLowerCase().includes(searchString);\n          }\n\n          if (_Array$isArray(item)) {\n            return item.map(function (i) {\n              return match(i);\n            }).includes(true);\n          }\n\n          return false;\n        };\n\n        filteredPosts = filteredPosts.filter(function (p) {\n          return match(p.title) || match(p.excerpt) || match(p.frontmatter.description) || match(p.tags) || match(p.category);\n        });\n      }\n\n      return filteredPosts;\n    }\n  },\n  watch: {\n    filteredPosts: {\n      immediate: true,\n      handler: function handler(val) {\n        this.$emit('input', val);\n      }\n    }\n  }\n};",null]}